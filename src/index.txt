b_pre_monad/A_start_here.thy ========================================
(* failwith --------------------------------------------------------- *)
(* debugging, asserts ----------------------------------------------- *)
(* a single error type, for all proof-relevant errors --------------- *)
(* misc aux defns --------------------------------------------------- *)
(* iterate f:'a -> 'a option ---------------------------------------- *)

b_pre_monad/Constants_and_size_types.thy ========================================
(* min/max size constants ------------------------------------------- *)
(* small node or leaf ----------------------------------------------- *)

b_pre_monad/Delete_state.thy ========================================
(* delete ----------------------------------------------------------- *)
(* wellformedness --------------------------------------------------- *)

b_pre_monad/Disk_node.thy ========================================

b_pre_monad/Find_state.thy ========================================
(* wellformedness --------------------------------------------------- *)
(* testing ---------------------------------------------------------- *)

b_pre_monad/Insert_many_state.thy ========================================

b_pre_monad/Insert_state.thy ========================================
(* insert ----------------------------------------------------------- *)
(* wellformedness --------------------------------------------------- *)

b_pre_monad/Key_value.thy ========================================
(* k ord ------------------------------------------------------------ *)
(* key ordering, generic defns key_lt etc --------------------------- *)
(* ordererd key list ------------------------------------------------ *)
(* check keys ------------------------------------------------------- *)
(* insert and delete in list of kv ---------------------------------- *)

b_pre_monad/Leaf_stream_state.thy ========================================
(* leaf stream types ------------------------------------------------ *)

b_pre_monad/Old.thy ========================================
(* old res ---------------------------------------------------------- *)
(* split_at etc ----------------------------------------------------- *)
(* transition systems ----------------------------------------------- *)

b_pre_monad/Pre_monad.thy ========================================

b_pre_monad/Simple_frame.thy ========================================

b_pre_monad/Stacks_and_frames.thy ========================================

b_pre_monad/Tree_stack.thy ========================================
(* node_stack, a stack of frames ------------------------------------ *)
(* tree_stack ------------------------------------------------------- *)
(* stack_to_lu_of_child (get bounds of focus) ----------------------- *)
(* tree_to_rstack, rstack_to_tree, no_focus ------------------------- *)
(* add_new_stk_frame; r_stk_to_rs ----------------------------------- *)

b_pre_monad/Tree.thy ========================================
(* tree algebraic datatype ------------------------------------------ *)
(* util ------------------------------------------------------------- *)
(* height ----------------------------------------------------------- *)
(* to subtrees ------------------------------------------------------ *)
(* balanced --------------------------------------------------------- *)
(* get min size ----------------------------------------------------- *)
(* wf size, ie respects min/max bounds ------------------------------ *)
(* wf_ks_rs, ie |rs|=|ks|+1 ----------------------------------------- *)
(* keys in tree (nodes and leaves) ---------------------------------- *)
(* keys consistent ie node keys bounds subtrees --------------------- *)
(* keys_ordered ie in nodes and leaves the keys are sorted ---------- *)
(* wellformed_tree -------------------------------------------------- *)
(* tree_to_leaves, tree_to_map etc ---------------------------------- *)

c_monad/Monad_old.thy ========================================
(* monad ------------------------------------------------------------ *)

c_monad/Monad.thy ========================================

d_find_ins_del/Delete_backup.thy ========================================
(* node steal ------------------------------------------------------- *)
(* node merge ------------------------------------------------------- *)
(* leaf steal ------------------------------------------------------- *)
(* leaf merge ------------------------------------------------------- *)
(* fixup empty parent ----------------------------------------------- *)
(* delete ----------------------------------------------------------  *)

d_find_ins_del/Delete.thy ========================================
(* node steal ------------------------------------------------------- *)
(* delete ----------------------------------------------------------  *)

d_find_ins_del/Export_code_test.thy ========================================

d_find_ins_del/Export_code.thy ========================================
(* post monad ------------------------------------------------------- *)

d_find_ins_del/Find.thy ========================================
(* find ------------------------------------------------------------- *)

d_find_ins_del/Insert_many.thy ========================================
(* im_step defns ---------------------------------------------------- *)

d_find_ins_del/Insert.thy ========================================
(* insert ----------------------------------------------------------- *)

d_find_ins_del/Leaf_stream.thy ========================================

d_find_ins_del/Post_monad.thy ========================================
(* ops types -------------------------------------------------------- *)

old/Prelude.thy ========================================
(* min/max size constants ------------------------------------------- *)
(* small node or leaf ----------------------------------------------- *)
(* transition systems ----------------------------------------------- *)

old/Pre_monad_mutate.thy ========================================

old/Searching_and_splitting.thy ========================================
(* get_lu_bounds for rsplit_node ------------------------------------ *)
(* split node based on search key ----------------------------------- *)
(* FIXME moved from pre_insert -------------------------------------  *)
(* insert aux funs: split_leaf and split_node ----------------------- *)

old/Util.thy ========================================
(* failwith --------------------------------------------------------- *)
(* debugging, asserts ----------------------------------------------- *)
(* a single error type, for all proof-relevant errors --------------- *)
(* misc ------------------------------------------------------------- *)
(* res -------------------------------------------------------------- *)
(* various list defs, split_at etc ---------------------------------- *)
(* iterate f:'a -> 'a option ---------------------------------------- *)

